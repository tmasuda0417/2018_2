シーケンスデータをvcfファイルにするまでの流れ
##http://kazumaxneo.hatenablog.com/entry/2017/05/31/170329
##http://www.brain.riken.go.jp/labs/mdmd/exome/0kara.html
##https://biosciencedbc.jp/gadget/human/20160726_amelieff.pdf
##https://www.slideshare.net/Amelieff/exome
##https://software.broadinstitute.org/gatk/documentation/quickstart.php

シーケンス結果のfastqファイル(R1, R2)を用意
NCBI等からリファレンスのfastaファイルをダウンロード

以下#http://kazumaxneo.hatenablog.com/entry/2017/05/31/170329
の手順に従う

リファレンスの.faiと.dictファイルの作成
samtools faidx ref.fa
picard CreateSequenceDictionary R=ref.fa O=ref.dict
.dictファイルはref.fa.dictでなく，ref.dictで良い
#samtoolsでは.faiファイルはできるがbwaにはかからないので，
#bwa index -p .fastaファイル名 -a is .fastaファイルを実行したらbwaを行える．
#この時-pでつけるindexファイル名はfastaファイル名をそのまま用いる

bwa mem -M -R '@RG\tID:sample_1\tLB:sample_1\tPL:ILLUMINA\tPM:HISEQ\tSM:sample_1' ref.fasta R1.fq R2.fq > aligned_reads.sam
でbwaを実行


java -jar picard.jar SortSam INPUT=aligned_reads.sam OUTPUT=sorted_reads.bam SORT_ORDER=coordinate
#picardのSortSam.jarは/home/tools/picard/picard----/の下にあるので，そこを指定する(以下も同じく)

java -jar picard.jar CollectAlignmentSummaryMetrics R=ref.fasta I=sorted_reads.bam O=alignment_metrics.txt

java -jar picard.jar CollectInsertSizeMetrics INPUT=sorted_reads.bam OUTPUT=insert_metrics.txt HISTOGRAM_FILE=insert_size_histogram.pdf

samtools depth -a -d 100000000000 sorted_reads.bam > depth_out.txt

java -jar picard.jar MarkDuplicates INPUT=sorted_reads.bam OUTPUT=dedup_reads.bam METRICS_FILE=metrics.txt

java -jar picard.jar BuildBamIndex INPUT=dedup_reads.bam

8-9のリアライメントを行う部分は，
RealignerTargetCreator.jarが今回用いているgatk ver4ではないので，
そのまま10のvariant callを行う

gatk HaplotypeCaller -R ref.fa -I dedup_reads.bam -O raw_variants.vcf

cat .vcf | wc
#ファイルの行数を数える
